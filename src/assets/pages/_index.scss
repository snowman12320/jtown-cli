@import '../helpers/mix';
@import '../helpers/function';
@import '../helpers/variables';

//第三方CDN
@import url('https://fonts.googleapis.com/css?family=Rubik:700&display=swap'); //字型
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css'); //font-awesome文字格式icon 可連動

* {
  font-family: 'Rubik', sans-serif;
}

.navbar {
  // position: fixed;
  z-index: 9999;
  left: 0;
  right: 0;
  top: 0;
  margin: 0 auto;
  padding: 0 10px;
  .container-fluid {
    max-width: 1440px;
  }
  .d-flex:hover .nav_h1 {
    color: $nbaRed;
  }
  .navbar-brand {
    @include hide_text;
    width: 50px;
    height: 50px;
    // 你這段意思是 .navbar-brand:hover 的內部 .nav_h1 但 .nav_h1 不在 .navbar-brand 內 (只能背才能連動)
    // :hover .nav_h1 {
    //   color: $nbaRed;
    // }
  }
  .nav_h1 {
    color: $black;
    padding-top: 10px;
    text-shadow: 2px 2px 4px white, -2px -2px 4px white;
    &:hover {
      color: $nbaRed;
    }
  }
  .navbar-nav .nav-link {
    color: $black;
    font-weight: bold;
    text-shadow: 2px 2px 4px white, -2px -2px 4px white;
    &:hover {
      color: $nbaRed;
    }
  }
  // 要用"."active才有用..........
  .navbar-nav .nav-link.active {
    color: $nbaRed;
    .visited {
      color: $gray-500;
    }
  }
  .navbar-nav .nav_pill {
    // 要加& 不然會指一條直的陰影 第一層不用加 第二層要加&
    transition: all;
    transition-duration: 500ms;
    box-shadow: 0 5px 1px $black;
    transform: translateY(-5px);
    &:hover {
      box-shadow: 0 6px 1px $black;
      transform: translateY(-8px);
    }
    &:focus {
      box-shadow: 0 3px 1px $black;
      transform: translateY(0px);
    }
  }
  i {
    text-shadow: 2px 2px 4px white, -2px -2px 4px white;
  }
}
.nav_shadow {
  // box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.6);
  // 模糊值和擴散值 2 / -2就不會有x陰影
  box-shadow: 0 2px 2px -2px $gray-500;
}

//箭頭動畫
.banner_arrow {
  position: absolute;
  bottom: 0%;
  left: 50%;
  // margin-top: 50vh;
  // margin-left: 50vw;
  // margin: 0 auto;
  color: $white;
  animation: banner_arrow 1s infinite;
  transform: translateX(-50%);
  // transform: translateY(50%);
}
@include maxpad() {
  .carousel iframe,
  .carousel img {
    height: 450px;
  }
}
@keyframes banner_arrow {
  0% {
    bottom: 100px;
    opacity: 0%;
  }
  25% {
    opacity: 25%;
  }
  50% {
    opacity: 50%;
  }
  75% {
    opacity: 75%;
  }
  100% {
    opacity: 100%;
    bottom: 50px;
  }
}

// 要用important 因為外層有用了 會被覆蓋 導致定位在整個版面上 /關機拿掉後又好了.......
// .img_relative {
//   position: relative;
//   display: flex;
// }
.love_img_back {
  // 可用BS提供的SVG圖 但關機才出現圖的BUG而載了別的圖
  background-image: url(@/assets/nbaWeb/Minimal-Magnifying-Glass.svg);
  width: 150px;
  height: 150px;
  position: absolute;
  background-repeat: no-repeat;
  background-size: contain;
  display: none;
}
// 要把與圖片同層的元素連動hover 就必須使用 ~ 不然就要另外包一層父層來hover啟動子層.........
// 但newproduct_img父層card包起來所以還是要父層hover不用"~"
.love_img:hover {
  opacity: 50%;
  ~ .love_img_back {
    display: block;
  }
}

.newproduct_cloth {
  // width: 100%;
  // height: 312px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: 3%;
  color: $white;
  background-image: linear-gradient(180deg, rgb(0, 0, 0, 0), rgb(0, 0, 0, 0.8));
  // display: none;
  opacity: 0;
}
// 要使用外面那層的CLS(.card) 不然本身圖片CLS(.card-img)會沒有效果 flex排版要放在hover裡 才不會重置跑版
.newproduct_img:hover {
  overflow: hidden;
  & .newproduct_cloth {
    // display: block;
    opacity: 1;
    display: flex;
    flex-direction: column;
    justify-content: end;
    transition: all;
    transition-duration: 500ms;
    z-index: 2;
  }
  & img {
    transition: all 500ms;
    transform: scale(1.2);
    z-index: 1;
  }
}

.rank_card {
  // 連動hover 前面不用& 但要用:不能用. 後面不能用 ~
  :hover button {
    color: $nbaBlue !important;
  }
  :hover .card {
    box-shadow: 0 20px 20px $shadow;
  }
  :hover .img_back_kobe {
    background-image: url(@/assets/nbaWeb/CYOKWOiUoAIJGu4.png);
    background-position: center center;
    background-size: cover;
  }
  :hover .img_back_lebron {
    background-image: url(@/assets/nbaWeb/PNG-images-NBA-Players-3png.png);
    background-position: center center;
    background-size: none;
    background-repeat: no-repeat;
  }
  :hover .img_back_curry {
    background-image: url(@/assets/nbaWeb/tyler-martoia-nVpT1jeu3f0-unsplash.jpg);
    background-position: center center;
    background-size: cover;
  }
  //球星列表
  :hover .img_back_westbrook {
    background-image: url(@/assets/nbaWeb/PNG-images-NBA-Players-58png.png);
    background-position: bottom center;
    background-size: none;
    background-repeat: no-repeat;
  }
  :hover .img_back_irving {
    background-image: url(@/assets/nbaWeb/PNG-images-NBA-Players-60png.png);
    background-position: bottom center;
    background-size: fill;
    background-repeat: no-repeat;
  }
  :hover .img_back_wall {
    background-image: url(@/assets/nbaWeb/PNG-images-NBA-Players-70png.png);
    background-position: bottom center;
    background-size: cover;
  }
  :hover .card-img-top {
    display: none;
  }
  .img_back {
    width: 100%;
    height: 250px;
    background-color: $white;
    border-radius: 3%;
  }
  .card-body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-bottom: 0;
  }
  // 建議可以顯示三行（讓它自動斷行），多的部分隱藏即可，另外多行無法使用 `...` 喔
  .card-text {
    // white-space: wrap; /*段落自動換行*/
    // overflow: hidden; /*超過寬度隱藏*/
    // text-overflow: ellipsis; /*文字省略號*/
    height: 45px;
    // margin-bottom: 0;
  }
  // stretched-link 這個原理是使用偽元素，你把它覆蓋掉了勒
  // .rank_a:after {
  .rank_a {
    //   content: "";
    //   position: absolute;
    //   top: 88%;
    //   left: 10%;
    //   background: $gray-500;
    //   width: 80%;
    //   height: 1px;
    border-top: 1px $gray-500 solid;
    padding-top: 10px;
    border-left: 0px;
    border-right: 0px;
    border-bottom: 0px;
  }
}
@include sellbtn_Rwd;

@include maxphone {
  .custom_img {
    display: none;
  }
}

// 不需要所有元素都在 container 內，背景也是需要設計的
.talent {
  max-width: 3000px;
}

.footer {
  // max-width: 1440px;
  // margin: 0 auto;
}

//視差浮現(左右)
.animated_left {
  // display: none;
  opacity: 0;
  transition: all 2s;
  transform: translateX(-50px);
}
.fadeIn_left {
  // display: block;
  opacity: 1;
  transform: translateX(0);
}
//視差浮現(下上)
.animated_down {
  // height: 0;
  opacity: 0;
  transition: all 1.5s;
  transform: translateY(50px);
}
.fadeIn_down {
  // height: 300;
  opacity: 1;
  transform: translateY(0);
}


